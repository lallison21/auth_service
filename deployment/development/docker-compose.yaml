services:
  auth_service:
    build:
      context: ../..
      dockerfile: deployment/development/Dockerfile
    env_file:
      - .env
    ports:
      - "50000:50000"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres
    env_file:
      - .env
    ports:
      - "5431:5432"
    volumes:
      - .database/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  migration:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    env_file:
      - .env
    profiles: [ "tools" ]
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable"
      ]
    command: [ "up", "down" ]
    depends_on:
      postgres:
        condition: service_healthy
